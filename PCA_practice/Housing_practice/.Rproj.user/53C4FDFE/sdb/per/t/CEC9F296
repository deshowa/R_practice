{
    "collab_server" : "",
    "contents" : "### This is the code for the Unit 6 case study####\n\n# The first thing to do is read in both of the files\n\n#install.packages(\"countrycode\")\n#install.packages(\"xlsx\")\n\nlibrary(plyr)\nlibrary(RCurl)\n\n\n\nsessionInfo()\n\ngetwd()\n\n# just checking to make sure we are in the right directory for the project, the user should as well\n\n# First, we need to download the data and save in our data directory\n\ngdp_url<- \"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv\"\neducational_url<-\"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv\"\n\ndownload.file(gdp_url, \"analysis/data/getdata-data-gdp.csv\")\ndownload.file(educational_url, \"analysis/data/getdata-data-EDSTATS_Country.csv\")\n\n\nraw_gdp<- read.csv(\"analysis/data/getdata-data-gdp.csv\",header = TRUE, skip = 3, blank.lines.skip = TRUE) \n                  \n#print(raw_gdp)\n\n# I do not want the comments below row 232 so I will simply use the nrows argument and reread the .csv since the file is small\n\nraw_gdp<- read.csv(\"analysis/data/getdata-data-gdp.csv\",header = TRUE, skip = 3, blank.lines.skip = TRUE, nrows = 232) \n\n#print(raw_gdp)\n\n# good, one problem solved...we got rid of the information below EMU\n\n\n\ncolnames(raw_gdp)\n\n# These are pretty bad looking column names, definitely not tidy, let's rename them\n\nnames(raw_gdp) <-c(\"country_code\",\"GDP_rank\", \"null_col\",\"economy\",\"GDP_US_dollars\",\"letter_column\" )\n\ncolnames(raw_gdp)\n# alright, we have some good names here now\n\n# Now, lets' remove that null_col, mainly because it is annoying\n# I know that the columns is the 3rd column, so I will just remove it\nkeepers<- c(\"country_code\",\"GDP_rank\",\"economy\",\"GDP_US_dollars\",\"letter_column\" )\n\nraw_gdp<- raw_gdp[,keepers]\n\n#print(raw_gdp)\n#looks gone, let's make sure\ncolnames(raw_gdp)\n\n# Now let's move on to NA rows\n# first, let's count the NA rows\nsum(is.na(raw_gdp$country_code))\nsum(is.na(raw_gdp$GDP_rank))\nsum(is.na(raw_gdp$economy))\nsum(is.na(raw_gdp$GDP_US_dollars))\nsum(is.na(raw_gdp$letter_column))\n\n## Or could do it this way\n\nsapply(raw_gdp, function(x) length(which(is.na(x))))\n\n# looks like we have NAs in GDP rank, let's take those out\n\nraw_gdp<- na.omit(raw_gdp)\n\nstr(raw_gdp)\n\n# make sure we took out all of those country groupings\n\nsapply(raw_gdp, function(x) length(which(is.na(x))))\n\n# looks good\n\n# Let's check the class of the variables in the dataset to see if anything looks weird and needs changing\n\n\n\nsapply(raw_gdp, class)\n\n# looks like GDP_US_dollars is a factor, I would like this to be numeric, but I noticed (after many trials) that commas are present in the factor\n\n\n\nraw_gdp$GDP_US_dollars<- as.numeric(gsub(\",\",\"\",raw_gdp$GDP_US_dollars))\n\n\n#check the results\n\nsapply(raw_gdp, class)\n\n# make sure nothing is null\n\nsapply(raw_gdp, function(x) length(which(is.na(x))))\n\n# check!  We look good here now!\n\n# the only thing left appears to be the letter column.  I am making the decision to leave this in, because I could see\n# the column at some point meaning something, but it will not hurt the data to be there\n# thank goodness I already have the country code data...The biggest thing to do now is join (merge) the datasets together\n\n\n# looks like we should do not need to add the country code column to this dataset\n\n### Now, let's move on to the Educational stats data####\n\nraw_educ<- read.csv(\"analysis/data/getdata-data-EDSTATS_Country.csv\",header = TRUE)\n\nsapply(raw_educ, function(x) length(which(is.na(x))))\n\n# looks like alot of my observations contain NAs, I may not want to do the same filtering in this one.  If I do, I may not have any \n# observations left\n\n# let's take a look\n\n#head(raw_educ)\n#str(raw_educ)\n\n# just as I suspected, there are 234 observations, if I go out and delete all of the NAs, most of my dataset and potentially some\n#matches will disappear.  I can always filter later.  This dataset really looks like it mostly adds dimensionality, not numeric data\n\n\n\n\n# I do need to rename the country code prior to merging, let's do that right now.\n\n\ncolnames(raw_educ)[1]<- \"country_code\"\n\ncolnames(raw_educ)\n\n# ok, now we match, both formats were alright, but I like the more database friendly \"-\" version\n\n# let's merge the dataset together, I chose all = FALSE in order to perform an inner join\n\n\nclean_gdp_education_data<- merge(x = raw_gdp, y = raw_educ, by = \"country_code\", all = FALSE)\n\nsapply(clean_gdp_education_data, class)\n\nhead(clean_gdp_education_data)\n\n#clean_gdp_educ$economy\n#nrow(clean_gdp_educ)\n#nrow(raw_educ)\n#nrow(raw_gdp)\n\nwrite.csv(clean_gdp_education_data,\"analysis/data/tidy_gdp_educ_data.csv\", row.names = FALSE)\n\n\n                    \n\n\n\n\n",
    "created" : 1483491414466.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3413859480",
    "id" : "CEC9F296",
    "lastKnownWriteTime" : 1466038160,
    "last_content_update" : 1466038160,
    "path" : "C:/SMU Data science/Doing data science course/Units/Unit 6/case_study/analysis/data_cleanup.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}